{
    // Enable the on-save syntax checking plugin, which will highlight any
    // build errors or warnings.
    "rust_syntax_checking": true,

    // The method used to check code on-save.
    // "check", "no-trans", or "clippy" (see README.md)
    "rust_syntax_checking_method": "check",

    // Enable checking of test code within #[cfg(test)] sections.
    "rust_syntax_checking_include_tests": true,

    // If true, will not display warning messages.
    "rust_syntax_hide_warnings": false,

    // Color of error messages.
    "rust_syntax_error_color": "#F00",

    // Color of warning messages.
    "rust_syntax_warning_color":"#FF0",

    // Specify environment variables to add when running Cargo.
    // "rust_env": {"PATH": "$PATH:$HOME/.cargo/bin"}

    // If true, will use the environment from the user's login shell when
    // running Cargo.
    "rust_include_shell_env": true,

    // For errors/warnings, how to show the inline message.
    // "normal" - Shows the message inline.
    // "none" - Do not show the message inline.
    "rust_phantom_style": "normal",

    // For errors/warnings, how to highlight the region of the error.
    // "outline" - Outlines the region.
    // "none" - No outlining.
    "rust_region_style": "outline",

    // If your cargo project has several build targets, it's possible to specify mapping of
    // source code filenames to the target names to enable syntax checking.
    // "projects": {
    //     // One entry per project. Key is a project name.
    //     "my_cool_stuff": {
    //         "root": "/path/to/my/cool/stuff/project",  // without trailing /src
    //         // Targets will be used to replace {target} part in the syntax check command:
    //         // command = 'cargo rustc {target} -- <some options>'. If no one target matches
    //         // an empty string will be used.
    //         "targets": {
    //             "bin/foo.rs": "--bin foo",  // format is "source_code_filename -> target_name"
    //             "bin/bar.rs": "--bin bar",
    //             "_default": "--lib"         // or "--bin main"
    //         }
    //     }
    // }
}
